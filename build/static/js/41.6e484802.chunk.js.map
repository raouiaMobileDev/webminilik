{"version":3,"sources":["config/firebase.js","assets/img/logo/ok.png","views/Command/Command.js"],"names":["FIREBASEDB","APIKEY","SIGNUP","concat","SIGNIN","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","addPubToFirebase","pub","console","log","ref","push","then","catch","e","addRestaurantToFirebase","restaurant","addPlatToFirebase","plat","addCategoryToFirebase","category","listRestaurantsToFirebase","restaurants","once","snapshot","key","val","forEach","item","Object","D_CLEVERDEV_Projects_myproject_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","id","getRestaurants","type","payload","axios","response","data","listCategoriesToFirebase","categories","getCommands","commands","signUp","method","url","email","password","returnSecureToken","headers","Content-Type","signIn","updateCommandValidRestaurant","idCommand","command","update","module","exports","__webpack_require__","p","Command","props","_this","D_CLEVERDEV_Projects_myproject_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_CLEVERDEV_Projects_myproject_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_CLEVERDEV_Projects_myproject_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleData","idRestaurant","$this","newCommands","dateNow","Date","list","element","date","clientSentTime","getDate","getMonth","getFullYear","length","state","sort","a","b","setState","validRestaurantHandler","target","newCommand","client","isClosed","plats","price","restaurantReservedTime","toString","table","isClosedHandler","loadPlats","map","i","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","name","quantity","loadTable","className","toISOString","replace","reactstrap__WEBPACK_IMPORTED_MODULE_8__","size","color","onClick","bind","D_CLEVERDEV_Projects_myproject_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","style","styles","media","object","src","MyLogo","loading","toggle","onRadioBtnClick","dropdownOpen","radioSelected","_this2","match","params","uid","Restaurant","setInterval","hover","responsive","Component","width","connect","dispatch","bindActionCreators"],"mappings":"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","file":"static/js/41.6e484802.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport uuid from 'uuid/v4';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst FIREBASEDB = 'https://minilik-4e824.firebaseio.com/';\r\n\r\n\r\nconst APIKEY = `AIzaSyD2raRNg7gb1bFPbB3WENlXEq2WEwI8NCA`;\r\nconst SIGNUP = `https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=${APIKEY}`;\r\nconst SIGNIN = `https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=${APIKEY}`;\r\n\r\n\r\nconst config = {\r\n   // apiKey: \"AIzaSyC3A1SavrYQVF4f4RT3HsjhjU3UwV_vrK4\",\r\n  //  authDomain: \"minilik-31707.firebaseapp.com\",\r\n // databaseURL: \"https://minilik-31707.firebaseio.com\",\r\n  //  projectId: \"minilik-31707\",\r\n  //  storageBucket: \"minilik-31707.appspot.com\",\r\n  //  messagingSenderId: \"849103712925\"\r\n\r\n    apiKey: \"AIzaSyD2raRNg7gb1bFPbB3WENlXEq2WEwI8NCA\",\r\n    authDomain: \"minilik-4e824.firebaseapp.com\",\r\n    databaseURL: \"https://minilik-4e824.firebaseio.com\",\r\n    projectId: \"minilik-4e824\",\r\n    storageBucket: \"minilik-4e824.appspot.com\",\r\n    messagingSenderId: \"41678970934\"\r\n    };\r\n\r\n    \r\n    firebase.initializeApp(config);\r\n    const database = firebase.database()\r\n    export default database\r\n\r\n\r\n\r\n    export  const addTaskToFirebase = (task) => {\r\n        const id = uuid()\r\n        database.ref(`/${id}`).set({\r\n        task, id\r\n        })\r\n       }\r\n\r\n\r\n    export const addPubToFirebase = (pub) => {\r\n        console.log('**********call the data base');\r\n        database.ref('pubs').push( pub).then(() => {\r\n            console.log('Data is saved!');\r\n        }).catch((e) => {\r\n            console.log('Failed.', e);\r\n        });\r\n       }   \r\n\r\n       export const addRestaurantToFirebase = (restaurant) => {\r\n        console.log('**********call the data base');\r\n        database.ref('restaurants').push(restaurant).then(() => {\r\n            console.log('Data is saved!');\r\n        }).catch((e) => {\r\n            console.log('Failed.', e);\r\n        });\r\n       } \r\n\r\n\r\n       export const addPlatToFirebase = (plat) => {\r\n        console.log('**********call the data base');\r\n        database.ref('plats').push(plat).then(() => {\r\n            console.log('Data is saved!');\r\n        }).catch((e) => {\r\n            console.log('Failed.', e);\r\n        });\r\n       } \r\n       \r\n       export const addCategoryToFirebase = (category) => {\r\n        console.log('**********call the data base');\r\n        database.ref('categories').push(category).then(() => {\r\n            console.log('Data is saved!');\r\n        }).catch((e) => {\r\n            console.log('Failed.', e);\r\n        });\r\n       }  \r\n\r\n    export const removeTaskFromFirebase = (id) => {\r\n       database.ref(`/${id}`).remove()\r\n       }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n       export const listRestaurantsToFirebase = () => {\r\n        var restaurants = [];\r\n       database.ref('restaurants')\r\n       .once('value')\r\n       .then((snapshot) => {\r\n           const key = snapshot.key;\r\n           const val = snapshot.val();\r\n           console.log(val);\r\n            // put the values in the table restaurants\r\n          // const restaurants = [];\r\n           snapshot.forEach(item => {\r\n            restaurants.push({\r\n                id: item.key,\r\n                ...item.val()\r\n            });\r\n\r\n            });\r\n            console.log(restaurants);\r\n            //return restaurants;\r\n       })\r\n       .catch((e) => {\r\n           console.log('Error fetching data', e);\r\n       });\r\n       return restaurants;\r\n    }\r\n\r\n    export function getRestaurants(){\r\n\r\n        const request = axios(`${FIREBASEDB}/restaurants.json`)\r\n                    .then(response => {\r\n                        let restaurants = [];\r\n    \r\n                        for(let key in response.data){\r\n                            restaurants.push({\r\n                                ...response.data[key],\r\n                                id:key\r\n                            })\r\n                        }\r\n                        return restaurants;\r\n                    })\r\n    \r\n        return {\r\n            type:'GET_RESTAURANTS',\r\n            payload:request\r\n        }\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    export const listCategoriesToFirebase = () => {\r\n        var categories = [];\r\n       database.ref('categories')\r\n       .once('value')\r\n       .then((snapshot) => {\r\n           const key = snapshot.key;\r\n           const val = snapshot.val();\r\n           snapshot.forEach(item => {\r\n            categories.push({\r\n                id: item.key,\r\n                ...item.val()\r\n            });\r\n\r\n            });\r\n       })\r\n       .catch((e) => {\r\n           console.log('Error fetching data', e);\r\n       });\r\n       return categories;\r\n    }\r\n\r\n\r\n    export const listCommands = () => {\r\n        var commands = [];\r\n       database.ref('Commands')\r\n       .once('value')\r\n       .then((snapshot) => {\r\n           const key = snapshot.key;\r\n           const val = snapshot.val();\r\n           snapshot.forEach(item => {\r\n            commands.push({\r\n                id: item.key,\r\n                ...item.val()\r\n            });\r\n\r\n            });\r\n       })\r\n       .catch((e) => {\r\n           console.log('Error fetching data', e);\r\n       });\r\n       return commands;\r\n    }\r\n\r\n\r\n    export function getCommands(){\r\n\r\n        const request = axios(`${FIREBASEDB}/Commands.json`)\r\n                    .then(response => {\r\n                        let commands = [];\r\n    \r\n                        for(let key in response.data){\r\n                            commands.push({\r\n                                ...response.data[key],\r\n                                id:key\r\n                            })\r\n                        }\r\n                        return commands;\r\n                    })\r\n    \r\n        return {\r\n            type:'GET_COMMANDS',\r\n            payload:request\r\n        }\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    export const signUp = (data)=>{\r\n\r\n        const request = axios({\r\n            method:\"POST\",\r\n            url:SIGNUP,\r\n            data:{\r\n                email: data.email,\r\n                password: data.password,\r\n                returnSecureToken:true\r\n            },\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n        }).then( response => {\r\n            return response.data\r\n        }).catch(e =>{\r\n            return false\r\n        })\r\n    \r\n        return {\r\n            type: 'register_user',\r\n            payload: request\r\n        }\r\n    }\r\n\r\n    export function signIn(data){\r\n\r\n        const request = axios({\r\n            method:\"POST\",\r\n            url:SIGNIN,\r\n            data:{\r\n                email: data.email,\r\n                password: data.password,\r\n                returnSecureToken:true\r\n            },\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n        }).then(response =>{\r\n            return response.data\r\n        }).catch(e=>{\r\n            return false\r\n        });\r\n    \r\n        return {\r\n            type: 'sign_user',\r\n            payload: request\r\n        }\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    export const updateCommandValidRestaurant = (idCommand, command) => {\r\n        database.ref('Commands/'+idCommand).update(command);\r\n    }\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/ok.a1413391.png\";","import React, { Component, lazy, Suspense } from 'react';\r\nimport { Bar, Line } from 'react-chartjs-2';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Progress,\r\n  Row,\r\n  Table,\r\n  Pagination, PaginationItem, PaginationLink,\r\n  Button,\r\n  Media\r\n} from 'reactstrap';\r\nimport MyLogo from '../../assets/img/logo/ok.png';\r\n\r\n//const Widget03 = lazy(() => import('../../views/Widgets/Widget03'));\r\n\r\n\r\nimport {getCommands, updateCommandValidRestaurant,listRestaurantsToFirebase,getRestaurants}  from '../../config/firebase';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\n\r\nclass Command extends Component {\r\n\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\r\n\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      radioSelected: 2,\r\n      commands:[],\r\n      idRestaurant:''\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    console.log('this.props')\r\n    console.log(this.props.match.params.key)\r\n\r\n\r\n    var uid=this.props.match.params.key;\r\n    var idRestaurant=''\r\n\r\n  \r\n\r\n  this.props.getRestaurants().then( () => {\r\n    var restaurants =this.props.Restaurant.list\r\n    if(restaurants.length>0){\r\n     restaurants.forEach((element)=>{\r\n      console.log(element.uid)\r\n      console.log(uid)\r\n      if(element.uid===uid)\r\n      {\r\n        console.log(\"trueeeeeeee\")\r\n        idRestaurant=element.id\r\n        return;\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  console.log('idRestaurant')\r\n  console.log(idRestaurant)\r\n\r\n  this.setState({\r\n    idRestaurant: idRestaurant\r\n  }, () => {\r\n    console.log(this.state.idRestaurant); // further value\r\n}); \r\n\r\n  if(idRestaurant!==''){\r\n\r\n\r\n\r\n    setInterval(this.handleData(idRestaurant,this), 20000);\r\n\r\n\r\n  }\r\n\r\n\r\n  })\r\n \r\n\r\n  }\r\n\r\n\r\nhandleData=(idRestaurant,$this ) =>\r\n{\r\n  \r\n  $this.props.getCommands().then( () => {\r\n\r\n  \r\n    var newCommands=[]\r\n    var dateNow = new Date();\r\n\r\n    console.log('this.props.Command.list')\r\n    console.log(this.props.Command.list)\r\n\r\n     $this.props.Command.list.forEach((element)=>{\r\n       var date = new Date(element.clientSentTime);\r\n       console.log('element.restaurant')\r\n       console.log(element.restaurant)\r\n       if(element.restaurant===idRestaurant\r\n         && dateNow.getDate()===date.getDate() &&\r\n         dateNow.getMonth()===date.getMonth() &&\r\n         dateNow.getFullYear()===date.getFullYear()\r\n         )\r\n       {\r\n         newCommands.push(element)\r\n       }\r\n       })\r\n\r\n       if( newCommands.length!==this.state.commands.length)\r\n       {\r\n\r\n       newCommands.sort(function(a,b){\r\n         // Turn your strings into dates, and then subtract them\r\n         // to get a value that is either negative, positive, or zero.\r\n         return new Date(b.clientSentTime) - new Date(a.clientSentTime);\r\n       });\r\n\r\n   $this.setState({\r\n       commands: newCommands\r\n     }, () => {\r\n       console.log(this.state.commands); // further value\r\n   }); \r\n  }\r\n\r\n   });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n  validRestaurantHandler=(e)=>{\r\n \r\n    var idCommand=e.target.id\r\n    var newCommand={}\r\n    this.state.commands.forEach((element)=>{\r\n      if(element.id===idCommand)\r\n        {\r\n          newCommand={\r\n            client: element.client,\r\n            clientSentTime:element.clientSentTime,\r\n            isClosed:element.isClosed,\r\n            plats:element.plats,\r\n            price:element.price,\r\n            restaurant:element.restaurant,\r\n            restaurantReservedTime: new Date().toString(),\r\n            table: element.table\r\n          };\r\n          return;\r\n        }\r\n    })\r\n\r\n    updateCommandValidRestaurant(idCommand, newCommand)\r\n\r\n    this.props.getCommands().then( () => {\r\n     \r\n      this.setState({\r\n          commands: this.props.Command.list\r\n        }, () => {\r\n          console.log(this.state.commands); // further value\r\n      }); \r\n  \r\n      });\r\n\r\n  }\r\n\r\n\r\n\r\n  isClosedHandler=(e)=>{\r\n \r\n    var idCommand=e.target.id\r\n    var newCommand={}\r\n    this.state.commands.forEach((element)=>{\r\n      if(element.id===idCommand && element.restaurantReservedTime!==\"\")\r\n        {\r\n          newCommand={\r\n            client: element.client,\r\n            clientSentTime:element.clientSentTime,\r\n            isClosed:true,\r\n            plats:element.plats,\r\n            price:element.price,\r\n            restaurant:element.restaurant,\r\n            restaurantReservedTime: element.restaurantReservedTime,\r\n            table: element.table\r\n          };\r\n          return;\r\n        }\r\n    })\r\n\r\n    updateCommandValidRestaurant(idCommand, newCommand)\r\n\r\n    this.props.getCommands().then( () => {\r\n     \r\n      this.setState({\r\n          commands: this.props.Command.list\r\n        }, () => {\r\n          console.log(this.state.commands); // further value\r\n      }); \r\n  \r\n      });\r\n\r\n  }\r\n\r\n\r\n\r\nloadPlats=(plats)=>(\r\n  plats.map( (item,i ) => (\r\n    <div key={i}>\r\n    <strong> {item.name}</strong>   <br></br>\r\n    <strong> Quantité: {item.quantity}</strong> <br></br>\r\n    <hr></hr>\r\n   </div>\r\n  ))\r\n)\r\n\r\n\r\nloadTable = () =>(\r\n  this.state.commands.map( (item,i ) => (\r\n    <tr key={\"key_${i}\"}>\r\n        {/*\r\n        <td className=\"text-center\">\r\n        <small>{item.id}</small>\r\n        </td>\r\n        */}\r\n        <td className=\"text-center\">\r\n    \r\n        {\r\n       this.loadPlats(item.plats)\r\n        }\r\n\r\n\r\n      \r\n        </td>\r\n\r\n        <td className=\"text-center\">\r\n        <strong>{item.price},000 DNT</strong>\r\n        </td>\r\n\r\n        <td className=\"text-center\">\r\n        <strong>{item.table}</strong>\r\n        </td>\r\n\r\n  \r\n        <td className=\"text-center\">\r\n        <strong>{new Date(item.clientSentTime).toISOString().replace(/T/, ' ').replace(/\\..+/, '')} </strong>\r\n        </td>\r\n\r\n        \r\n        <td className=\"text-center\">\r\n        {\r\n          item.restaurantReservedTime!==\"\" ?\r\n        <strong>{ new Date(item.restaurantReservedTime).toISOString().replace(/T/, ' ').replace(/\\..+/, '')} </strong>\r\n        : \r\n        <Button type=\"submit\" size=\"sm\" color=\"primary\" id={item.id} onClick={this.validRestaurantHandler.bind(this)}> Validé</Button>\r\n        }\r\n        </td>\r\n\r\n        \r\n        <td className=\"text-center\">\r\n        {\r\n          !item.isClosed ?\r\n          <Button type=\"submit\" size=\"sm\" color=\"primary\" id={item.id} onClick={this.isClosedHandler.bind(this)}> Validé</Button>\r\n        : \r\n        <Media style={styles.media} object src={ MyLogo}/> \r\n        }\r\n\r\n        </td>\r\n    </tr>\r\n   ))\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  toggle() {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen,\r\n    });\r\n  }\r\n\r\n  onRadioBtnClick(radioSelected) {\r\n    this.setState({\r\n      radioSelected: radioSelected,\r\n    });\r\n  }\r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n\r\n \r\n\r\n\r\n  render() {\r\n\r\n  \r\n    setInterval(this.handleData(this.state.idRestaurant,this), 20000);\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n\r\n      <Row>\r\n          <Col>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n               Liste de commandes\r\n              </CardHeader>\r\n              <CardBody>\r\n\r\n                <Table hover responsive className=\"table-outline mb-0 d-none d-sm-table\">\r\n                  <thead className=\"thead-light\">\r\n                  <tr>\r\n                  {/* <th className=\"text-center\">ID</th> */}\r\n                    <th className=\"text-center\">commande</th>\r\n                    <th className=\"text-center\">prix</th>\r\n                    <th className=\"text-center\">Table</th>\r\n                    <th className=\"text-center\">Date de commande</th>\r\n                    <th className=\"text-center\">Date de validation</th>\r\n                    <th className=\"text-center\">Libéré table</th>\r\n                  </tr>\r\n                  </thead>\r\n\r\n\r\n\r\n                  <tbody>\r\n                    {this.loadTable()}\r\n                  </tbody>\r\n                </Table>\r\n\r\n{/*\r\n                <Pagination>\r\n                  <PaginationItem>\r\n                    <PaginationLink previous tag=\"button\"></PaginationLink>\r\n                  </PaginationItem>\r\n                  <PaginationItem active>\r\n                    <PaginationLink tag=\"button\">1</PaginationLink>\r\n                  </PaginationItem>\r\n                  <PaginationItem>\r\n                    <PaginationLink tag=\"button\">2</PaginationLink>\r\n                  </PaginationItem>\r\n                  <PaginationItem>\r\n                    <PaginationLink tag=\"button\">3</PaginationLink>\r\n                  </PaginationItem>\r\n                  <PaginationItem>\r\n                    <PaginationLink tag=\"button\">4</PaginationLink>\r\n                  </PaginationItem>\r\n                  <PaginationItem>\r\n                    <PaginationLink next tag=\"button\"></PaginationLink>\r\n                  </PaginationItem>\r\n                </Pagination>\r\n\r\n*/}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst styles = {\r\n  media:{\r\n    width: 50,\r\n \r\n  }\r\n  };\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  console.log(state)\r\n  return {\r\n      Command:state.Command,\r\n      Restaurant:state.Restaurant\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return bindActionCreators({getCommands,getRestaurants},dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Command)\r\n\r\n"],"sourceRoot":""}